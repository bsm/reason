// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: regression/hoeffding/internal/internal.proto

package internal

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import core "github.com/bsm/reason/core"
import util "github.com/bsm/reason/util"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Tree wraps the tree data.
type Tree struct {
	// The underlying model.
	Model *core.Model `protobuf:"bytes,1,opt,name=model" json:"model,omitempty"`
	// The target feature.
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	// The root nodeRef.
	Root int64 `protobuf:"varint,3,opt,name=root,proto3" json:"root,omitempty"`
	// The node registry.
	Nodes                []*Node  `protobuf:"bytes,4,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tree) Reset()         { *m = Tree{} }
func (m *Tree) String() string { return proto.CompactTextString(m) }
func (*Tree) ProtoMessage()    {}
func (*Tree) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_c0f4172bbcb8d085, []int{0}
}
func (m *Tree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tree.Unmarshal(m, b)
}
func (m *Tree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tree.Marshal(b, m, deterministic)
}
func (dst *Tree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tree.Merge(dst, src)
}
func (m *Tree) XXX_Size() int {
	return xxx_messageInfo_Tree.Size(m)
}
func (m *Tree) XXX_DiscardUnknown() {
	xxx_messageInfo_Tree.DiscardUnknown(m)
}

var xxx_messageInfo_Tree proto.InternalMessageInfo

// FeatureStats instances maintain stats based on
// observation of a particular feature.
type FeatureStats struct {
	// Types that are valid to be assigned to Kind:
	//	*FeatureStats_Numerical_
	//	*FeatureStats_Categorical_
	Kind                 isFeatureStats_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FeatureStats) Reset()         { *m = FeatureStats{} }
func (m *FeatureStats) String() string { return proto.CompactTextString(m) }
func (*FeatureStats) ProtoMessage()    {}
func (*FeatureStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_c0f4172bbcb8d085, []int{1}
}
func (m *FeatureStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureStats.Unmarshal(m, b)
}
func (m *FeatureStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureStats.Marshal(b, m, deterministic)
}
func (dst *FeatureStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureStats.Merge(dst, src)
}
func (m *FeatureStats) XXX_Size() int {
	return xxx_messageInfo_FeatureStats.Size(m)
}
func (m *FeatureStats) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureStats.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureStats proto.InternalMessageInfo

type isFeatureStats_Kind interface {
	isFeatureStats_Kind()
}

type FeatureStats_Numerical_ struct {
	Numerical *FeatureStats_Numerical `protobuf:"bytes,1,opt,name=numerical,oneof"`
}
type FeatureStats_Categorical_ struct {
	Categorical *FeatureStats_Categorical `protobuf:"bytes,2,opt,name=categorical,oneof"`
}

func (*FeatureStats_Numerical_) isFeatureStats_Kind()   {}
func (*FeatureStats_Categorical_) isFeatureStats_Kind() {}

func (m *FeatureStats) GetKind() isFeatureStats_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *FeatureStats) GetNumerical() *FeatureStats_Numerical {
	if x, ok := m.GetKind().(*FeatureStats_Numerical_); ok {
		return x.Numerical
	}
	return nil
}

func (m *FeatureStats) GetCategorical() *FeatureStats_Categorical {
	if x, ok := m.GetKind().(*FeatureStats_Categorical_); ok {
		return x.Categorical
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FeatureStats) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FeatureStats_OneofMarshaler, _FeatureStats_OneofUnmarshaler, _FeatureStats_OneofSizer, []interface{}{
		(*FeatureStats_Numerical_)(nil),
		(*FeatureStats_Categorical_)(nil),
	}
}

func _FeatureStats_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FeatureStats)
	// kind
	switch x := m.Kind.(type) {
	case *FeatureStats_Numerical_:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Numerical); err != nil {
			return err
		}
	case *FeatureStats_Categorical_:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Categorical); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("FeatureStats.Kind has unexpected type %T", x)
	}
	return nil
}

func _FeatureStats_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FeatureStats)
	switch tag {
	case 1: // kind.numerical
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FeatureStats_Numerical)
		err := b.DecodeMessage(msg)
		m.Kind = &FeatureStats_Numerical_{msg}
		return true, err
	case 2: // kind.categorical
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FeatureStats_Categorical)
		err := b.DecodeMessage(msg)
		m.Kind = &FeatureStats_Categorical_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _FeatureStats_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FeatureStats)
	// kind
	switch x := m.Kind.(type) {
	case *FeatureStats_Numerical_:
		s := proto.Size(x.Numerical)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *FeatureStats_Categorical_:
		s := proto.Size(x.Categorical)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type FeatureStats_Numerical struct {
	Min                  float64                              `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  float64                              `protobuf:"fixed64,2,opt,name=max,proto3" json:"max,omitempty"`
	Observations         []FeatureStats_Numerical_Observation `protobuf:"bytes,3,rep,name=observations" json:"observations"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *FeatureStats_Numerical) Reset()         { *m = FeatureStats_Numerical{} }
func (m *FeatureStats_Numerical) String() string { return proto.CompactTextString(m) }
func (*FeatureStats_Numerical) ProtoMessage()    {}
func (*FeatureStats_Numerical) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_c0f4172bbcb8d085, []int{1, 0}
}
func (m *FeatureStats_Numerical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureStats_Numerical.Unmarshal(m, b)
}
func (m *FeatureStats_Numerical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureStats_Numerical.Marshal(b, m, deterministic)
}
func (dst *FeatureStats_Numerical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureStats_Numerical.Merge(dst, src)
}
func (m *FeatureStats_Numerical) XXX_Size() int {
	return xxx_messageInfo_FeatureStats_Numerical.Size(m)
}
func (m *FeatureStats_Numerical) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureStats_Numerical.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureStats_Numerical proto.InternalMessageInfo

type FeatureStats_Numerical_Observation struct {
	FeatureValue         float64  `protobuf:"fixed64,1,opt,name=feature_value,json=featureValue,proto3" json:"feature_value,omitempty"`
	TargetValue          float64  `protobuf:"fixed64,2,opt,name=target_value,json=targetValue,proto3" json:"target_value,omitempty"`
	Weight               float64  `protobuf:"fixed64,3,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureStats_Numerical_Observation) Reset()         { *m = FeatureStats_Numerical_Observation{} }
func (m *FeatureStats_Numerical_Observation) String() string { return proto.CompactTextString(m) }
func (*FeatureStats_Numerical_Observation) ProtoMessage()    {}
func (*FeatureStats_Numerical_Observation) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_c0f4172bbcb8d085, []int{1, 0, 0}
}
func (m *FeatureStats_Numerical_Observation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureStats_Numerical_Observation.Unmarshal(m, b)
}
func (m *FeatureStats_Numerical_Observation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureStats_Numerical_Observation.Marshal(b, m, deterministic)
}
func (dst *FeatureStats_Numerical_Observation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureStats_Numerical_Observation.Merge(dst, src)
}
func (m *FeatureStats_Numerical_Observation) XXX_Size() int {
	return xxx_messageInfo_FeatureStats_Numerical_Observation.Size(m)
}
func (m *FeatureStats_Numerical_Observation) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureStats_Numerical_Observation.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureStats_Numerical_Observation proto.InternalMessageInfo

type FeatureStats_Categorical struct {
	util.Matrix          `protobuf:"bytes,1,opt,name=stats,embedded=stats" json:"stats"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureStats_Categorical) Reset()         { *m = FeatureStats_Categorical{} }
func (m *FeatureStats_Categorical) String() string { return proto.CompactTextString(m) }
func (*FeatureStats_Categorical) ProtoMessage()    {}
func (*FeatureStats_Categorical) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_c0f4172bbcb8d085, []int{1, 1}
}
func (m *FeatureStats_Categorical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureStats_Categorical.Unmarshal(m, b)
}
func (m *FeatureStats_Categorical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureStats_Categorical.Marshal(b, m, deterministic)
}
func (dst *FeatureStats_Categorical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureStats_Categorical.Merge(dst, src)
}
func (m *FeatureStats_Categorical) XXX_Size() int {
	return xxx_messageInfo_FeatureStats_Categorical.Size(m)
}
func (m *FeatureStats_Categorical) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureStats_Categorical.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureStats_Categorical proto.InternalMessageInfo

// Node is a tree node
type Node struct {
	// Observation stats for the node
	Stats *util.Vector `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
	// Nodes can be leaf or split nodes.
	//
	// Types that are valid to be assigned to Kind:
	//	*Node_Leaf
	//	*Node_Split
	Kind                 isNode_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_c0f4172bbcb8d085, []int{2}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

type isNode_Kind interface {
	isNode_Kind()
}

type Node_Leaf struct {
	Leaf *LeafNode `protobuf:"bytes,2,opt,name=leaf,oneof"`
}
type Node_Split struct {
	Split *SplitNode `protobuf:"bytes,3,opt,name=split,oneof"`
}

func (*Node_Leaf) isNode_Kind()  {}
func (*Node_Split) isNode_Kind() {}

func (m *Node) GetKind() isNode_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *Node) GetLeaf() *LeafNode {
	if x, ok := m.GetKind().(*Node_Leaf); ok {
		return x.Leaf
	}
	return nil
}

func (m *Node) GetSplit() *SplitNode {
	if x, ok := m.GetKind().(*Node_Split); ok {
		return x.Split
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Node) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Node_OneofMarshaler, _Node_OneofUnmarshaler, _Node_OneofSizer, []interface{}{
		(*Node_Leaf)(nil),
		(*Node_Split)(nil),
	}
}

func _Node_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Node)
	// kind
	switch x := m.Kind.(type) {
	case *Node_Leaf:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Leaf); err != nil {
			return err
		}
	case *Node_Split:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Split); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Node.Kind has unexpected type %T", x)
	}
	return nil
}

func _Node_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Node)
	switch tag {
	case 2: // kind.leaf
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LeafNode)
		err := b.DecodeMessage(msg)
		m.Kind = &Node_Leaf{msg}
		return true, err
	case 3: // kind.split
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SplitNode)
		err := b.DecodeMessage(msg)
		m.Kind = &Node_Split{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Node_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Node)
	// kind
	switch x := m.Kind.(type) {
	case *Node_Leaf:
		s := proto.Size(x.Leaf)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Node_Split:
		s := proto.Size(x.Split)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// SplitNode instances are intermediate nodes within the tree.
type SplitNode struct {
	// The feature name (predictor).
	Feature string `protobuf:"bytes,1,opt,name=feature,proto3" json:"feature,omitempty"`
	// The pivot value for binary splits (numerical predictors).
	Pivot float64 `protobuf:"fixed64,2,opt,name=pivot,proto3" json:"pivot,omitempty"`
	// The child references.
	Children             SplitNode_Children `protobuf:"bytes,3,opt,name=children" json:"children"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SplitNode) Reset()         { *m = SplitNode{} }
func (m *SplitNode) String() string { return proto.CompactTextString(m) }
func (*SplitNode) ProtoMessage()    {}
func (*SplitNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_c0f4172bbcb8d085, []int{3}
}
func (m *SplitNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitNode.Unmarshal(m, b)
}
func (m *SplitNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitNode.Marshal(b, m, deterministic)
}
func (dst *SplitNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitNode.Merge(dst, src)
}
func (m *SplitNode) XXX_Size() int {
	return xxx_messageInfo_SplitNode.Size(m)
}
func (m *SplitNode) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitNode.DiscardUnknown(m)
}

var xxx_messageInfo_SplitNode proto.InternalMessageInfo

// Children is a collection of child node references.
type SplitNode_Children struct {
	Dense                []int64         `protobuf:"varint,1,rep,packed,name=dense" json:"dense,omitempty"`
	Sparse               map[int64]int64 `protobuf:"bytes,2,rep,name=sparse" json:"sparse,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SparseCap            int64           `protobuf:"varint,3,opt,name=sparse_cap,json=sparseCap,proto3" json:"sparse_cap,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SplitNode_Children) Reset()         { *m = SplitNode_Children{} }
func (m *SplitNode_Children) String() string { return proto.CompactTextString(m) }
func (*SplitNode_Children) ProtoMessage()    {}
func (*SplitNode_Children) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_c0f4172bbcb8d085, []int{3, 0}
}
func (m *SplitNode_Children) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitNode_Children.Unmarshal(m, b)
}
func (m *SplitNode_Children) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitNode_Children.Marshal(b, m, deterministic)
}
func (dst *SplitNode_Children) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitNode_Children.Merge(dst, src)
}
func (m *SplitNode_Children) XXX_Size() int {
	return xxx_messageInfo_SplitNode_Children.Size(m)
}
func (m *SplitNode_Children) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitNode_Children.DiscardUnknown(m)
}

var xxx_messageInfo_SplitNode_Children proto.InternalMessageInfo

// LeafNode instances are the leaves within the tree.
type LeafNode struct {
	// Observation stats, but feature.
	FeatureStats map[string]*FeatureStats `protobuf:"bytes,1,rep,name=feature_stats,json=featureStats" json:"feature_stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	// Weight at the time of the last split evaluation.
	WeightAtLastEval float64 `protobuf:"fixed64,2,opt,name=weight_at_last_eval,json=weightAtLastEval,proto3" json:"weight_at_last_eval,omitempty"`
	// Status indicator.
	IsDisabled           bool     `protobuf:"varint,3,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeafNode) Reset()         { *m = LeafNode{} }
func (m *LeafNode) String() string { return proto.CompactTextString(m) }
func (*LeafNode) ProtoMessage()    {}
func (*LeafNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_internal_c0f4172bbcb8d085, []int{4}
}
func (m *LeafNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeafNode.Unmarshal(m, b)
}
func (m *LeafNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeafNode.Marshal(b, m, deterministic)
}
func (dst *LeafNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeafNode.Merge(dst, src)
}
func (m *LeafNode) XXX_Size() int {
	return xxx_messageInfo_LeafNode.Size(m)
}
func (m *LeafNode) XXX_DiscardUnknown() {
	xxx_messageInfo_LeafNode.DiscardUnknown(m)
}

var xxx_messageInfo_LeafNode proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Tree)(nil), "blacksquaremedia.reason.regression.hoeffding.Tree")
	proto.RegisterType((*FeatureStats)(nil), "blacksquaremedia.reason.regression.hoeffding.FeatureStats")
	proto.RegisterType((*FeatureStats_Numerical)(nil), "blacksquaremedia.reason.regression.hoeffding.FeatureStats.Numerical")
	proto.RegisterType((*FeatureStats_Numerical_Observation)(nil), "blacksquaremedia.reason.regression.hoeffding.FeatureStats.Numerical.Observation")
	proto.RegisterType((*FeatureStats_Categorical)(nil), "blacksquaremedia.reason.regression.hoeffding.FeatureStats.Categorical")
	proto.RegisterType((*Node)(nil), "blacksquaremedia.reason.regression.hoeffding.Node")
	proto.RegisterType((*SplitNode)(nil), "blacksquaremedia.reason.regression.hoeffding.SplitNode")
	proto.RegisterType((*SplitNode_Children)(nil), "blacksquaremedia.reason.regression.hoeffding.SplitNode.Children")
	proto.RegisterMapType((map[int64]int64)(nil), "blacksquaremedia.reason.regression.hoeffding.SplitNode.Children.SparseEntry")
	proto.RegisterType((*LeafNode)(nil), "blacksquaremedia.reason.regression.hoeffding.LeafNode")
	proto.RegisterMapType((map[string]*FeatureStats)(nil), "blacksquaremedia.reason.regression.hoeffding.LeafNode.FeatureStatsEntry")
}

func init() {
	proto.RegisterFile("regression/hoeffding/internal/internal.proto", fileDescriptor_internal_c0f4172bbcb8d085)
}

var fileDescriptor_internal_c0f4172bbcb8d085 = []byte{
	// 812 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xcf, 0x8f, 0x1b, 0x35,
	0x14, 0xc7, 0x33, 0x99, 0x49, 0x48, 0xde, 0x2c, 0xa2, 0x18, 0x54, 0x45, 0x91, 0xd8, 0x5d, 0xb6,
	0x80, 0x72, 0x68, 0x27, 0x52, 0x90, 0x80, 0xee, 0x09, 0xb2, 0xdb, 0x2a, 0x87, 0x6d, 0x77, 0xe5,
	0xa0, 0x1e, 0xb8, 0x44, 0x9e, 0x19, 0x67, 0x62, 0x76, 0x66, 0x1c, 0x6c, 0x27, 0x6c, 0xe1, 0xc6,
	0x5f, 0xc0, 0x99, 0x7f, 0x84, 0xff, 0x00, 0xf5, 0xc8, 0x11, 0x71, 0xa8, 0xa8, 0x38, 0xf1, 0x5f,
	0x20, 0xff, 0x98, 0x64, 0x2a, 0xb4, 0x12, 0xd9, 0xed, 0x65, 0xe4, 0xf7, 0xe6, 0xf9, 0xe3, 0xef,
	0x7b, 0x7e, 0xb6, 0xe1, 0xbe, 0xa0, 0x99, 0xa0, 0x52, 0x32, 0x5e, 0x0e, 0x17, 0x9c, 0xce, 0xe7,
	0x29, 0x2b, 0xb3, 0x21, 0x2b, 0x15, 0x15, 0x25, 0xc9, 0x37, 0x83, 0x68, 0x29, 0xb8, 0xe2, 0xe8,
	0x7e, 0x9c, 0x93, 0xe4, 0x52, 0x7e, 0xb7, 0x22, 0x82, 0x16, 0x34, 0x65, 0x24, 0x12, 0x94, 0x48,
	0x5e, 0x46, 0x5b, 0x4a, 0xb4, 0xa1, 0xf4, 0x3f, 0xce, 0x98, 0x5a, 0xac, 0xe2, 0x28, 0xe1, 0xc5,
	0x30, 0x96, 0xc5, 0xd0, 0xc6, 0x0e, 0x13, 0x2e, 0xa8, 0xf9, 0x58, 0xe8, 0x75, 0x61, 0x2b, 0xc5,
	0x72, 0xf3, 0x71, 0x61, 0x0f, 0x6a, 0x61, 0x19, 0xcf, 0xf8, 0xd0, 0xb8, 0xe3, 0xd5, 0xdc, 0x58,
	0xc6, 0x30, 0x23, 0x1b, 0x7e, 0xf4, 0xab, 0x07, 0xc1, 0xd7, 0x82, 0x52, 0xf4, 0x10, 0x5a, 0x05,
	0x4f, 0x69, 0xde, 0xf3, 0x0e, 0xbd, 0x41, 0x38, 0xba, 0x17, 0x5d, 0x97, 0x83, 0x91, 0xf4, 0x44,
	0x87, 0x62, 0x3b, 0x03, 0xdd, 0x85, 0xb6, 0x22, 0x22, 0xa3, 0xaa, 0xd7, 0x3c, 0xf4, 0x06, 0x5d,
	0xec, 0x2c, 0x84, 0x20, 0x10, 0x9c, 0xab, 0x9e, 0x7f, 0xe8, 0x0d, 0x7c, 0x6c, 0xc6, 0x68, 0x02,
	0xad, 0x92, 0xa7, 0x54, 0xf6, 0x82, 0x43, 0x7f, 0x10, 0x8e, 0x46, 0xd1, 0x2e, 0xa5, 0x8a, 0x9e,
	0xf2, 0x94, 0x62, 0x0b, 0x38, 0xfa, 0x33, 0x80, 0xbd, 0xc7, 0x94, 0xa8, 0x95, 0xa0, 0x53, 0x45,
	0x94, 0x44, 0x29, 0x74, 0xcb, 0x55, 0x41, 0x05, 0x4b, 0x48, 0x95, 0xc5, 0xe9, 0x6e, 0xf8, 0x3a,
	0x2e, 0x7a, 0x5a, 0xb1, 0x26, 0x0d, 0xbc, 0x05, 0xa3, 0x6f, 0x21, 0x4c, 0x88, 0xa2, 0x19, 0xb7,
	0xeb, 0x34, 0xcd, 0x3a, 0x8f, 0x6f, 0xb1, 0xce, 0xc9, 0x96, 0x36, 0x69, 0xe0, 0x3a, 0xbc, 0xff,
	0x4b, 0x13, 0xba, 0x1b, 0x19, 0xe8, 0x0e, 0xf8, 0x05, 0x2b, 0x4d, 0x66, 0x1e, 0xd6, 0x43, 0xe3,
	0x21, 0x57, 0x46, 0x83, 0xf6, 0x90, 0x2b, 0xf4, 0x03, 0xec, 0xf1, 0x58, 0x52, 0xb1, 0x26, 0x8a,
	0xf1, 0x52, 0xf6, 0x7c, 0x53, 0xe5, 0x8b, 0x37, 0x51, 0x86, 0xe8, 0x7c, 0x0b, 0x1e, 0x07, 0x2f,
	0x5e, 0x1e, 0x34, 0xf0, 0x6b, 0x6b, 0xf5, 0x0b, 0x08, 0x6b, 0x21, 0xe8, 0x1e, 0xbc, 0x3d, 0xb7,
	0xa0, 0xd9, 0x9a, 0xe4, 0x2b, 0xea, 0x84, 0xef, 0x39, 0xe7, 0x33, 0xed, 0x43, 0x1f, 0xc2, 0x9e,
	0x6d, 0x16, 0x17, 0x63, 0x53, 0x09, 0xad, 0xcf, 0x86, 0xdc, 0x85, 0xf6, 0xf7, 0x94, 0x65, 0x0b,
	0xdb, 0x47, 0x1e, 0x76, 0x56, 0x7f, 0x0a, 0x61, 0xad, 0x74, 0xe8, 0x14, 0x5a, 0x52, 0x0b, 0x76,
	0x3b, 0xff, 0xd1, 0xb5, 0x29, 0x9b, 0xb3, 0xf2, 0x84, 0x28, 0xc1, 0xae, 0xc6, 0x1d, 0x9d, 0xc6,
	0xef, 0x2f, 0x0f, 0x3c, 0x6c, 0x27, 0x8f, 0xdb, 0x10, 0x5c, 0xb2, 0x32, 0x3d, 0xfa, 0xc7, 0x83,
	0x40, 0x37, 0x1b, 0x3a, 0xde, 0x09, 0xfb, 0x8c, 0x26, 0x8a, 0x0b, 0x07, 0x43, 0x67, 0x10, 0xe4,
	0x94, 0xcc, 0x5d, 0x8f, 0x7c, 0xb6, 0xdb, 0x26, 0x9c, 0x51, 0x32, 0xd7, 0x0a, 0x26, 0x0d, 0x6c,
	0x28, 0xe8, 0x1c, 0x5a, 0x72, 0x99, 0x33, 0x5b, 0x86, 0x70, 0xf4, 0xf9, 0x6e, 0xb8, 0xa9, 0x9e,
	0xea, 0x78, 0x96, 0xb3, 0xc9, 0xf5, 0x27, 0x1f, 0xba, 0x9b, 0xdf, 0xa8, 0x07, 0x6f, 0xb9, 0x1d,
	0x32, 0x29, 0x77, 0x71, 0x65, 0xa2, 0xf7, 0xa1, 0xb5, 0x64, 0x6b, 0xae, 0xdc, 0x26, 0x59, 0x03,
	0xc5, 0xd0, 0x49, 0x16, 0x2c, 0x4f, 0x05, 0x2d, 0x9d, 0xb2, 0x2f, 0x6f, 0xa8, 0x2c, 0x3a, 0x71,
	0x1c, 0xd7, 0x5d, 0x1b, 0x6e, 0xff, 0x2f, 0x0f, 0x3a, 0xd5, 0x4f, 0x2d, 0x23, 0xa5, 0xa5, 0xd4,
	0xf2, 0xfc, 0x81, 0x8f, 0xad, 0x81, 0x52, 0x68, 0xcb, 0x25, 0x11, 0x52, 0xb7, 0x90, 0x6e, 0xf9,
	0xb3, 0xdb, 0x8a, 0x88, 0xa6, 0x06, 0xf7, 0xa8, 0x54, 0xe2, 0x39, 0x76, 0x6c, 0xf4, 0x01, 0x80,
	0x1d, 0xcd, 0x12, 0xb2, 0x74, 0xf7, 0x5a, 0xd7, 0x7a, 0x4e, 0xc8, 0xb2, 0xff, 0x10, 0xc2, 0xda,
	0x2c, 0x7d, 0x3c, 0x2f, 0xe9, 0x73, 0x53, 0x46, 0x1f, 0xeb, 0xa1, 0xd6, 0xbe, 0xed, 0x73, 0x1f,
	0x5b, 0xe3, 0xb8, 0xf9, 0x85, 0x77, 0xf4, 0x5b, 0x13, 0x3a, 0xd5, 0x96, 0xa3, 0x62, 0x7b, 0x74,
	0xaa, 0xe6, 0xd3, 0x39, 0x4d, 0x6e, 0xd6, 0x41, 0xaf, 0x9d, 0x67, 0x9b, 0x4f, 0x75, 0x08, 0xed,
	0xc5, 0xf9, 0x00, 0xde, 0xb3, 0x67, 0x6a, 0x46, 0xd4, 0x2c, 0x27, 0x52, 0xcd, 0xe8, 0xda, 0x5d,
	0x6d, 0x1e, 0xbe, 0x63, 0x7f, 0x7d, 0xa5, 0xce, 0x88, 0x54, 0x8f, 0xd6, 0x24, 0x47, 0x07, 0x10,
	0x32, 0x39, 0x4b, 0x99, 0x24, 0x71, 0x4e, 0x53, 0x53, 0x85, 0x0e, 0x06, 0x26, 0x4f, 0x9d, 0xa7,
	0xff, 0x23, 0xbc, 0xfb, 0x9f, 0x25, 0xeb, 0xc5, 0xe8, 0xda, 0x62, 0x5c, 0xd4, 0x8b, 0x11, 0x8e,
	0x8e, 0x6f, 0x7e, 0x49, 0xd5, 0x0a, 0x39, 0x3e, 0x7f, 0xf1, 0x6a, 0xbf, 0xf1, 0xc7, 0xab, 0x7d,
	0xef, 0xe7, 0xbf, 0xf7, 0x1b, 0xf0, 0x49, 0xc2, 0x8b, 0xff, 0xc1, 0x1d, 0xbf, 0x33, 0xa9, 0xc0,
	0x17, 0xfa, 0x59, 0x94, 0xdf, 0x74, 0xaa, 0x27, 0x3d, 0x6e, 0x9b, 0x87, 0xf2, 0xd3, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xd7, 0x68, 0xbe, 0xeb, 0x03, 0x08, 0x00, 0x00,
}
