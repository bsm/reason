// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: util/util.proto

package util

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Vector represents a vector of weights.
// The minimum value of each vector element is 0, which indicates "not set".
type Vector struct {
	Data                 []float64 `protobuf:"fixed64,1,rep,packed,name=data" json:"data,omitempty"`
	Sparse               []int64   `protobuf:"varint,2,rep,packed,name=sparse" json:"sparse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Vector) Reset()         { *m = Vector{} }
func (m *Vector) String() string { return proto.CompactTextString(m) }
func (*Vector) ProtoMessage()    {}
func (*Vector) Descriptor() ([]byte, []int) {
	return fileDescriptor_util_cdfd920a411d3cd7, []int{0}
}
func (m *Vector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vector.Unmarshal(m, b)
}
func (m *Vector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vector.Marshal(b, m, deterministic)
}
func (dst *Vector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector.Merge(dst, src)
}
func (m *Vector) XXX_Size() int {
	return xxx_messageInfo_Vector.Size(m)
}
func (m *Vector) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector.DiscardUnknown(m)
}

var xxx_messageInfo_Vector proto.InternalMessageInfo

// Vector maintains a distribution of vectors.
type VectorDistribution struct {
	Dense                []VectorDistribution_Dense `protobuf:"bytes,1,rep,name=dense" json:"dense"`
	Sparse               map[int64]*Vector          `protobuf:"bytes,2,rep,name=sparse" json:"sparse,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	SparseCap            int64                      `protobuf:"varint,3,opt,name=sparse_cap,json=sparseCap,proto3" json:"sparse_cap,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *VectorDistribution) Reset()         { *m = VectorDistribution{} }
func (m *VectorDistribution) String() string { return proto.CompactTextString(m) }
func (*VectorDistribution) ProtoMessage()    {}
func (*VectorDistribution) Descriptor() ([]byte, []int) {
	return fileDescriptor_util_cdfd920a411d3cd7, []int{1}
}
func (m *VectorDistribution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VectorDistribution.Unmarshal(m, b)
}
func (m *VectorDistribution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VectorDistribution.Marshal(b, m, deterministic)
}
func (dst *VectorDistribution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VectorDistribution.Merge(dst, src)
}
func (m *VectorDistribution) XXX_Size() int {
	return xxx_messageInfo_VectorDistribution.Size(m)
}
func (m *VectorDistribution) XXX_DiscardUnknown() {
	xxx_messageInfo_VectorDistribution.DiscardUnknown(m)
}

var xxx_messageInfo_VectorDistribution proto.InternalMessageInfo

type VectorDistribution_Dense struct {
	*Vector              `protobuf:"bytes,1,opt,name=vector,embedded=vector" json:"vector,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VectorDistribution_Dense) Reset()         { *m = VectorDistribution_Dense{} }
func (m *VectorDistribution_Dense) String() string { return proto.CompactTextString(m) }
func (*VectorDistribution_Dense) ProtoMessage()    {}
func (*VectorDistribution_Dense) Descriptor() ([]byte, []int) {
	return fileDescriptor_util_cdfd920a411d3cd7, []int{1, 0}
}
func (m *VectorDistribution_Dense) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VectorDistribution_Dense.Unmarshal(m, b)
}
func (m *VectorDistribution_Dense) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VectorDistribution_Dense.Marshal(b, m, deterministic)
}
func (dst *VectorDistribution_Dense) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VectorDistribution_Dense.Merge(dst, src)
}
func (m *VectorDistribution_Dense) XXX_Size() int {
	return xxx_messageInfo_VectorDistribution_Dense.Size(m)
}
func (m *VectorDistribution_Dense) XXX_DiscardUnknown() {
	xxx_messageInfo_VectorDistribution_Dense.DiscardUnknown(m)
}

var xxx_messageInfo_VectorDistribution_Dense proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Vector)(nil), "blacksquaremedia.reason.util.Vector")
	proto.RegisterType((*VectorDistribution)(nil), "blacksquaremedia.reason.util.VectorDistribution")
	proto.RegisterMapType((map[int64]*Vector)(nil), "blacksquaremedia.reason.util.VectorDistribution.SparseEntry")
	proto.RegisterType((*VectorDistribution_Dense)(nil), "blacksquaremedia.reason.util.VectorDistribution.Dense")
}

func init() { proto.RegisterFile("util/util.proto", fileDescriptor_util_cdfd920a411d3cd7) }

var fileDescriptor_util_cdfd920a411d3cd7 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x3f, 0x4b, 0xc3, 0x40,
	0x18, 0xc6, 0x7b, 0xbd, 0x34, 0xe0, 0x9b, 0xc1, 0x72, 0x43, 0x09, 0x55, 0xdb, 0x50, 0x1c, 0xb2,
	0x98, 0x42, 0x05, 0x29, 0xd5, 0x29, 0xd6, 0xc9, 0x45, 0xce, 0x3f, 0x83, 0x4b, 0xb9, 0xa4, 0x67,
	0x0d, 0x4d, 0x73, 0x31, 0xb9, 0x14, 0xfa, 0x19, 0x5c, 0xfc, 0x58, 0x1d, 0x1d, 0x9d, 0x0a, 0xc5,
	0x2f, 0x22, 0x77, 0xa9, 0xa0, 0x88, 0x52, 0x97, 0xf0, 0x3c, 0xe1, 0x9e, 0xdf, 0xfb, 0xbc, 0xdc,
	0xc1, 0x6e, 0x21, 0xa3, 0xb8, 0xab, 0x3e, 0x5e, 0x9a, 0x09, 0x29, 0xc8, 0x7e, 0x10, 0xb3, 0x70,
	0x9a, 0x3f, 0x15, 0x2c, 0xe3, 0x33, 0x3e, 0x8e, 0x98, 0x97, 0x71, 0x96, 0x8b, 0xc4, 0x53, 0x67,
	0x9a, 0x47, 0x93, 0x48, 0x3e, 0x16, 0x81, 0x17, 0x8a, 0x59, 0x77, 0x22, 0x26, 0xa2, 0xab, 0x43,
	0x41, 0xf1, 0xa0, 0x9d, 0x36, 0x5a, 0x95, 0xb0, 0x4e, 0x1f, 0xcc, 0x3b, 0x1e, 0x4a, 0x91, 0x91,
	0x06, 0x18, 0x63, 0x26, 0x99, 0x8d, 0x1c, 0xec, 0x22, 0xbf, 0x5a, 0x47, 0x54, 0x7b, 0xd2, 0x00,
	0x33, 0x4f, 0x59, 0x96, 0x73, 0xbb, 0xea, 0x60, 0x17, 0xd3, 0x8d, 0xeb, 0x3c, 0x63, 0x20, 0x65,
	0x74, 0x18, 0xe5, 0x32, 0x8b, 0x82, 0x42, 0x46, 0x22, 0x21, 0x14, 0x6a, 0x63, 0x9e, 0xe4, 0x5c,
	0x73, 0xac, 0xde, 0x89, 0xf7, 0x57, 0x5b, 0xef, 0x27, 0xc0, 0x1b, 0xaa, 0xb4, 0x6f, 0x2c, 0x57,
	0xed, 0x0a, 0x2d, 0x51, 0xe4, 0xe6, 0x5b, 0x05, 0xab, 0x77, 0xf6, 0x6f, 0xe8, 0xb5, 0x8e, 0x5f,
	0x24, 0x32, 0x5b, 0x7c, 0x2e, 0x40, 0x0e, 0x00, 0x4a, 0x35, 0x0a, 0x59, 0x6a, 0x63, 0x07, 0xb9,
	0x98, 0xee, 0x94, 0x7f, 0xce, 0x59, 0xda, 0xbc, 0x84, 0x9a, 0xae, 0x42, 0x7c, 0x30, 0xe7, 0x9a,
	0x68, 0x23, 0x07, 0xb9, 0x56, 0xef, 0x70, 0x9b, 0xe9, 0xbe, 0xf1, 0xba, 0x6a, 0x23, 0xba, 0x49,
	0x36, 0x47, 0x60, 0x7d, 0xa9, 0x40, 0xea, 0x80, 0xa7, 0x7c, 0xa1, 0x79, 0x98, 0x2a, 0x49, 0x06,
	0x50, 0x9b, 0xb3, 0xb8, 0x50, 0x1b, 0x6e, 0x3d, 0x83, 0x96, 0x91, 0x41, 0xb5, 0x8f, 0xfc, 0xd3,
	0xe5, 0xba, 0x55, 0x79, 0x5b, 0xb7, 0xd0, 0xcb, 0x7b, 0xab, 0x02, 0x7b, 0xa1, 0x98, 0xfd, 0x46,
	0xf0, 0xe1, 0x56, 0x46, 0xf1, 0x95, 0xba, 0xfd, 0xfc, 0xde, 0x50, 0xb8, 0xc0, 0xd4, 0x6f, 0xe1,
	0xf8, 0x23, 0x00, 0x00, 0xff, 0xff, 0x5e, 0xb8, 0x27, 0xea, 0x6b, 0x02, 0x00, 0x00,
}
