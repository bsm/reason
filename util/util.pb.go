// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: util/util.proto

package util // import "github.com/bsm/reason/util"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Vector represents a vector of weights.
// The minimum value of each weight is 0, which indicates "not set".
type Vector struct {
	Data                 []float64 `protobuf:"fixed64,1,rep,packed,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
}

func (m *Vector) Reset()         { *m = Vector{} }
func (m *Vector) String() string { return proto.CompactTextString(m) }
func (*Vector) ProtoMessage()    {}
func (*Vector) Descriptor() ([]byte, []int) {
	return fileDescriptor_util_1b58ffcfa668484f, []int{0}
}
func (m *Vector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vector.Unmarshal(m, b)
}
func (m *Vector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vector.Marshal(b, m, deterministic)
}
func (dst *Vector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector.Merge(dst, src)
}
func (m *Vector) XXX_Size() int {
	return xxx_messageInfo_Vector.Size(m)
}
func (m *Vector) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector.DiscardUnknown(m)
}

var xxx_messageInfo_Vector proto.InternalMessageInfo

// Matrix is an auto-expanding matrix data type.
type Matrix struct {
	Stride               uint32    `protobuf:"varint,1,opt,name=stride,proto3" json:"stride,omitempty"`
	Data                 []float64 `protobuf:"fixed64,2,rep,packed,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
}

func (m *Matrix) Reset()         { *m = Matrix{} }
func (m *Matrix) String() string { return proto.CompactTextString(m) }
func (*Matrix) ProtoMessage()    {}
func (*Matrix) Descriptor() ([]byte, []int) {
	return fileDescriptor_util_1b58ffcfa668484f, []int{1}
}
func (m *Matrix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Matrix.Unmarshal(m, b)
}
func (m *Matrix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Matrix.Marshal(b, m, deterministic)
}
func (dst *Matrix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Matrix.Merge(dst, src)
}
func (m *Matrix) XXX_Size() int {
	return xxx_messageInfo_Matrix.Size(m)
}
func (m *Matrix) XXX_DiscardUnknown() {
	xxx_messageInfo_Matrix.DiscardUnknown(m)
}

var xxx_messageInfo_Matrix proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Vector)(nil), "blacksquaremedia.reason.util.Vector")
	proto.RegisterType((*Matrix)(nil), "blacksquaremedia.reason.util.Matrix")
}

func init() { proto.RegisterFile("util/util.proto", fileDescriptor_util_1b58ffcfa668484f) }

var fileDescriptor_util_1b58ffcfa668484f = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x2d, 0xc9, 0xcc,
	0xd1, 0x07, 0x11, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x32, 0x49, 0x39, 0x89, 0xc9, 0xd9,
	0xc5, 0x85, 0xa5, 0x89, 0x45, 0xa9, 0xb9, 0xa9, 0x29, 0x99, 0x89, 0x7a, 0x45, 0xa9, 0x89, 0xc5,
	0xf9, 0x79, 0x7a, 0x20, 0x35, 0x52, 0xba, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9,
	0xb9, 0xfa, 0xe9, 0xf9, 0xe9, 0xf9, 0xfa, 0x60, 0x4d, 0x49, 0xa5, 0x69, 0x60, 0x1e, 0x98, 0x03,
	0x66, 0x41, 0x0c, 0x53, 0x52, 0xe0, 0x62, 0x0b, 0x4b, 0x4d, 0x2e, 0xc9, 0x2f, 0x12, 0x12, 0xe3,
	0x62, 0x49, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x54, 0x60, 0xd6, 0x60, 0x74, 0x62, 0x12, 0x60, 0x0c,
	0x02, 0xf3, 0x95, 0x2c, 0xb8, 0xd8, 0x7c, 0x13, 0x4b, 0x8a, 0x32, 0x2b, 0x84, 0xc4, 0xb8, 0xd8,
	0x8a, 0x4b, 0x8a, 0x32, 0x53, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35, 0x78, 0x83, 0xa0, 0x3c, 0xb8,
	0x4e, 0x26, 0x54, 0x9d, 0x4e, 0xa1, 0x27, 0x1e, 0xca, 0x31, 0xdc, 0x78, 0x28, 0xc7, 0x38, 0xe1,
	0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x5c, 0xd2, 0xc9, 0xf9, 0xb9, 0x7a, 0x38, 0x9c, 0xef,
	0xc4, 0x15, 0x5a, 0x92, 0x99, 0x13, 0x00, 0x72, 0x55, 0x71, 0x94, 0x14, 0x92, 0x2f, 0x92, 0x8a,
	0x73, 0xf5, 0x21, 0x4a, 0xc0, 0xa1, 0x90, 0xc4, 0x06, 0x76, 0xb9, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0x3b, 0xd3, 0xa6, 0x30, 0x19, 0x01, 0x00, 0x00,
}
